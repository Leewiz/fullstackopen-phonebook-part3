{"version":3,"sources":["services/persons.js","components/Person.js","components/Button.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","PhonebookService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","remove","delete","Person","props","name","number","Button","type","value","onClick","Persons","persons","handleDeletePerson","map","person","PersonForm","personFormData","newName","newNumber","handleAddPerson","onNameTextChange","onNumberTextChange","onSubmit","onChange","Filter","filterFormData","searchTerm","onSearchTextChange","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","setSearchTerm","setNotification","defaultNotification","useEffect","initialPersons","notify","timeout","setTimeout","handleTextChangeEvent","setterCallback","event","target","preventDefault","personObject","existingPerson","find","p","window","confirm","returnedPerson","catch","error","filter","console","log","concat","personToDelete","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7caf2ba8.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst PhonebookService = { getAll, create, update, remove }\r\nexport default PhonebookService","import React from 'react'\r\n\r\nconst Person = (props) => {\r\n  return (\r\n    <>\r\n      {props.name} {props.number}\r\n    </>\r\n)}\r\n\r\nexport default Person","import React from 'react'\r\n\r\nconst Button = ({ type, value, onClick }) => {\r\n  return (\r\n    <>\r\n      <input type={ type } value={ value } onClick={ onClick }/>\r\n    </>\r\n)}\r\n\r\nexport default Button","import React from 'react'\r\nimport Person from './Person'\r\nimport Button from './Button'\r\n\r\nconst Persons = ({ persons, handleDeletePerson }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        persons.map(person =>\r\n          <div key={person.id}>\r\n            <Person key={ person.name } name={ person.name } number={ person.number } />\r\n            <Button key={ person.number } onClick={ () => handleDeletePerson(person.id) } type='button' value='delete' /><br />\r\n          </div>\r\n      )}\r\n    </div>\r\n)}\r\n\r\nexport default Persons","import React from 'react'\r\nimport Button from './Button'\r\nconst PersonForm = ({ personFormData: { newName, newNumber, handleAddPerson, onNameTextChange, onNumberTextChange }}) => {\r\n  return (\r\n    <div>\r\n      <form onSubmit={ handleAddPerson }>\r\n        <div>\r\n          name: <input value={ newName } onChange={ onNameTextChange } />\r\n        </div>\r\n        <div>\r\n          number: <input value={ newNumber } onChange={ onNumberTextChange } />\r\n        </div>\r\n        <Button type='submit' value='add' />\r\n      </form>\r\n    </div>\r\n)}\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Filter = ({filterFormData: {searchTerm, onSearchTextChange}}) => {\r\n  return (\r\n    <div>\r\n        filter shown with <input value={searchTerm} onChange={onSearchTextChange} />\r\n    </div>\r\n)}\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ( { notification }) => {\r\n  \r\n  if(notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={ notification.type }>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PhonebookService from './services/persons'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Filter from './components/Filter'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchTerm, setSearchTerm ] = useState('')\n  const [ notification, setNotification ] = useState('')\n\n  const defaultNotification = {\n    type: 'none',\n    message: 'default',\n  }\n\n  useEffect(() => {\n    PhonebookService\n      .getAll()\n      .then(initialPersons => setPersons(initialPersons))\n    setNotification(defaultNotification)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const duplicateExists = (person) => persons.find(p => p.name === person.name)\n\n  const notify = (type, message, timeout) => {\n    const newNotification = { type, message }\n    setNotification(newNotification)\n    setTimeout(() => {\n      setNotification(defaultNotification)\n    }, timeout)\n  }\n\n  const handleAddPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    const existingPerson = duplicateExists(personObject)\n    if(existingPerson) {\n      if(window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)) {\n        PhonebookService.update(existingPerson.id, personObject)\n        .then(returnedPerson => {\n          personObject['id'] = returnedPerson.id\n          notify('success', `updated ${returnedPerson.name}'s number'`)\n          setPersons(persons.map(p => p.id === returnedPerson.id ? returnedPerson : p))\n        })\n        .catch(error => {\n          notify('error', `information for ${existingPerson.name} has already been removed from server`, 5000)\n          setPersons(persons.filter(p => p.id !== existingPerson.id))\n          console.log(error)\n        })\n      }\n    }\n    else {\n      PhonebookService.create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        notify('success', `added ${personObject.name} to phonebook`, 5000)\n      })\n    }\n  }\n\n  const handleDeletePerson = (id) => {\n    const personToDelete = persons.find(p => p.id === id)\n    if(personToDelete && window.confirm(`Delete ${personToDelete.name}`)) {\n      PhonebookService.remove(id)\n      .then(() => {\n        setPersons(persons.filter(person => id !== person.id))\n        notify('success', `deleted ${personToDelete.name}`, 5000)\n      })\n      .catch(error => {\n        console.log(error)\n        notify('error', `error deleting ${personToDelete.name}: ${error}`, 5000)\n      })\n    }\n  }\n\n  const handleTextChangeEvent = (setterCallback, event) => {\n    setterCallback(event.target.value)\n  }\n\n  const filterFormData = {\n    searchTerm: searchTerm,\n    onSearchTextChange: (event) => handleTextChangeEvent(setSearchTerm, event)\n  }\n\n  const personFormData = {\n    newName: newName,\n    newNumber: newNumber,\n    handleAddPerson: handleAddPerson,\n    onNameTextChange: (event) => handleTextChangeEvent(setNewName, event),\n    onNumberTextChange: (event) => handleTextChangeEvent(setNewNumber, event)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={ notification } />\n\n      <Filter filterFormData={ filterFormData }/>\n\n      <h3>add new</h3>\n\n      <PersonForm personFormData={ personFormData }/>\n\n      <h3>Numbers</h3>\n      \n      <Persons handleDeletePerson={ handleDeletePerson } persons={persons.filter(person => person.name.toLowerCase().includes(searchTerm.toLowerCase())) }/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}